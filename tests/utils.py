# SPDX-License-Identifier: Apache-2.0
# Copyright Contributors to the SG Otio project

def add_to_sg_mock_db(mock_sg, entities):
    """
    Adds an entity or entities to the mocked ShotGrid database.

    This is required because when finding entities with mockgun, it
    doesn't return a "name" key.

    :param mock_sg: The mocked ShotGrid API instance.
    :param entities: A ShotGrid style dictionary with keys for id, type, and name
                     defined. A list of such dictionaries is also valid.
    """
    # make sure it's a list
    if isinstance(entities, dict):
        entities = [entities]
    for src_entity in entities:
        # Make a copy
        entity = dict(src_entity)
        # entity: {"id": 2, "type":"Shot", "name":...}
        # wedge it into the mockgun database
        et = entity["type"]
        eid = entity["id"]

        # special retired flag for mockgun
        entity["__retired"] = False
        # set a created by
        entity["created_by"] = {"type": "HumanUser", "id": 1}
        # turn any dicts into proper type/id/name refs
        for x in entity:
            # special case: EventLogEntry.meta is not an entity link dict
            if isinstance(entity[x], dict) and x != "meta":
                # make a std sg link dict with name, id, type
                link_dict = {"type": entity[x]["type"], "id": entity[x]["id"]}

                # most basic case is that there already is a name field,
                # in that case we are done
                if "name" in entity[x]:
                    link_dict["name"] = entity[x]["name"]

                elif entity[x]["type"] == "Task":
                    # task has a 'code' field called content
                    link_dict["name"] = entity[x]["content"]

                elif "code" not in entity[x]:
                    # auto generate a code field
                    link_dict["name"] = "mockgun_autogenerated_%s_id_%s" % (
                        entity[x]["type"],
                        entity[x]["id"],
                    )

                else:
                    link_dict["name"] = entity[x]["code"]

                # print "Swapping link dict %s -> %s" % (entity[x], link_dict)
                entity[x] = link_dict

        mock_sg._db[et][eid] = entity
